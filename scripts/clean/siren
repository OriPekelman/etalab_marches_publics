#!/usr/bin/env ruby
require_relative "etalab"
#require "roo"
require "csv"
class Etalab::Importer::SirenImporter < Etalab::Importer
  def initialize(file_name, index_name)
    @s = CSV.read(file_name,  col_sep: ";", encoding: "UTF-8")

#    @s = SimpleSpreadsheet::Workbook.read(file_name)
    mapping = [
      {:siret=>"SIRET"},
      {:commerce_tribunal=>"Ville Tribunal Commerce"},
      {:name=>"Raison sociale"},
      {:postal_code=>"Code Postale"},
      {:commercial_name=>"Nom commercial"},
    ]
    super(file_name, mapping, index_name)
  end
  def siret(val)
    val
  end
  def commerce_tribunal(val)
    val
  end
  def name(val)
    val
  end
  def postal_code(val)
    val
  end
  def commercial_name(val)
    val
  end
  
  def method_missing(m, *args, &block)  
    puts "There's no method called #{m} here -- please try again." 
    binding.pry 
  end  

  def import!

     @s.each do |line|

      @mapping.each_with_index do |field, column|
        key = field.keys[0]
        val =  self.public_send(key, line[column])  
        @h[key] = val
      end
      self.index!(@h, line)
    end
  end
  
end



lines = Etalab::Importer::SirenImporter.new("initial_data/siren_quoted.csv", "siren_2012").import!
puts "imported stuff"
